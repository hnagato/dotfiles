snippet     var
	var ${1} = ${2};${0}

snippet :f
	${1:method_name}: function(${2:attribute}){
	  ${0}
	}

snippet func
	function ${1:function_name}(${2:argument}) {
	  ${0:// body...}
	}

snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}) {
	  ${0:// body...}
	};


snippet f
	function(${1}) {${0:$TM_SELECTED_TEXT}};

snippet if
	if (${1:true}) {${0:$TM_SELECTED_TEXT}}


snippet ife
	if (${1:true}) {${0:$TM_SELECTED_TEXT}} else{}

snippet for
	for (var ${2:i}=0; $2 < ${1:Things}.length; $2++) {
	  ${0}
	};

snippet ;,
	${1:value_name}:${0:value},


snippet key
	${1:key}: "${2:value}"}${3:, }


snippet timeout
	setTimeout(function() {${0}}${2:}, ${1:10});

snippet try
	try {
	  ${1}
	} catch (e) {
	  ${0:console.log(e);}
	}

snippet log
	console.log(${1});

snippet re
abbr    require
	var ${1:name} require('${2:module_name}');${0}

snippet on
	${1:docuemnt}.on('${2:event}', function(e) {
	  ${0:// body...}
	});

snippet co
abbr    comment
	// ${0}

snippet bc
abbr    block-comment
	/**
	 * ${0}
	 */

